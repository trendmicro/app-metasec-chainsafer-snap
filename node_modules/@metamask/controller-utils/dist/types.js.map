{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,sCAAuB,CAAA;IACvB,kCAAmB,CAAA;IACnB,gCAAiB,CAAA;IACjB,kCAAmB,CAAA;IACnB,0BAAW,CAAA;AACb,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;AAED;;;;;GAKG;AACH,SAAgB,aAAa,CAAC,GAAQ;IACpC,OAAO,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClD,CAAC;AAFD,sCAEC;AAED,IAAY,eAMX;AAND,WAAY,eAAe;IACzB,gCAAa,CAAA;IACb,+BAAY,CAAA;IACZ,uCAAoB,CAAA;IACpB,iCAAc,CAAA;IACd,2BAAQ,CAAA;AACV,CAAC,EANW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAM1B;AAED,IAAY,SAIX;AAJD,WAAY,SAAS;IACnB,0BAAa,CAAA;IACb,yBAAY,CAAA;IACZ,iCAAoB,CAAA;AACtB,CAAC,EAJW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAIpB;AAED,IAAY,cAMX;AAND,WAAY,cAAc;IACxB,iCAAe,CAAA;IACf,sCAAoB,CAAA;IACpB,wCAAsB,CAAA;IACtB,gCAAc,CAAA;IACd,0BAAQ,CAAA;AACV,CAAC,EANW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAMzB","sourcesContent":["/**\n * Human-readable network name\n */\nexport enum NetworkType {\n  localhost = 'localhost',\n  mainnet = 'mainnet',\n  goerli = 'goerli',\n  sepolia = 'sepolia',\n  rpc = 'rpc',\n}\n\n/**\n * A helper to determine whether a given input is NetworkType.\n *\n * @param val - the value to check whether it is NetworkType or not.\n * @returns boolean indicating whether or not the argument is NetworkType.\n */\nexport function isNetworkType(val: any): val is NetworkType {\n  return Object.values(NetworkType).includes(val);\n}\n\nexport enum NetworksChainId {\n  mainnet = '1',\n  goerli = '5',\n  sepolia = '11155111',\n  localhost = '',\n  rpc = '',\n}\n\nexport enum NetworkId {\n  mainnet = '1',\n  goerli = '5',\n  sepolia = '11155111',\n}\n\nexport enum NetworksTicker {\n  mainnet = 'ETH',\n  goerli = 'GoerliETH',\n  sepolia = 'SepoliaETH',\n  localhost = '',\n  rpc = '',\n}\n\nexport type Json =\n  | null\n  | boolean\n  | number\n  | string\n  | Json[]\n  | { [prop: string]: Json };\n"]}